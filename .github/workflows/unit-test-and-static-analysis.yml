name: Unit Test and Static Analysis

on:
  push:
    paths-ignore:
      - README.md
      - SECURITY.md
      - docs/**
      - .github/**
      - sonar-project.properties
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]    
  workflow_dispatch:

jobs:
  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest  

    outputs:
      cache-hash: ${{ steps.cache-settings.outputs.hash }}
      yarn-cache-dir: ${{ steps.cache-settings.outputs.dir }}
      yarn-version: ${{ steps.cache-settings.outputs.version }}

    steps:
      - run: env

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "14.x"

      - name: Get Cache Settings
        id: cache-settings
        run: |
          hashSrcYarnLock=($(md5sum src/yarn.lock | awk '{ print $1 }'))
          echo "hash=$hashSrcYarnLock" >> $GITHUB_OUTPUT
          echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
          echo "version=$(yarn -v)" >> $GITHUB_OUTPUT

      - name: Cache Packages
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            **/.eslintcache
            ${{ steps.cache-settings.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ steps.cache-settings.outputs.version }}-${{ steps.cache-settings.outputs.hash }}

      - name: Install Packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 15
          retry_wait_seconds: 60
          max_attempts: 3
          command: pushd src && yarn install --frozen-lockfile

  build-job:
    name: Check Build and Export
    needs: install-dependencies
    runs-on: ubuntu-latest    

    steps:
    - run: env

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: "14.x"

    - name: Restore Cached Packages
      id: yarn-cache
      uses: actions/cache@v3
      with:
        path: |
          **/node_modules
          **/.eslintcache
          ${{ needs.install-dependencies.outputs.yarn-cache-dir }}
        key: ${{ runner.os }}-yarn-${{ needs.install-dependencies.outputs.yarn-version }}-${{ needs.install-dependencies.outputs.cache-hash }}

    - name: Make Env File
      uses: SpicyPizza/create-envfile@v2.0
      with:
        envkey_NEXT_PUBLIC_ENVIRONMENT: dev
        envkey_NEXT_PUBLIC_GRAPHQL_SERVER: ${{ secrets.DEV_APPSYNC_URL }}
        envkey_NEXT_PUBLIC_V1_ROOT_URL: https://portal.dev-myhelp.co.uk
        envkey_NEXT_PUBLIC_BTB_COURSE_1_URL: ${{ vars.DEV_BTB_COURSE_1_URL }}
        envkey_NEXT_PUBLIC_COGNITO_REGION: ${{ secrets.DEV_AWS_REGION }}
        envkey_NEXT_PUBLIC_COGNITO_APP_CLIENT_ID: ${{ secrets.DEV_AWS_CLIENT_ID }}
        envkey_NEXT_PUBLIC_COGNITO_USER_POOL_ID: ${{ secrets.DEV_USER_POOL_ID }}
        envkey_NEXT_PUBLIC_GRAPHQL_API_KEY: ${{ secrets.DEV_APPSYNC_API_KEY }}
        directory: src
        file_name: .env.local
        fail_on_empty: true
        
    - name: Build
      run: yarn build
      working-directory: src

    - name: Export
      run: yarn export
      working-directory: src

  linting-job:
    name: Linting Checks
    needs: install-dependencies
    runs-on: ubuntu-latest    

    steps:
    - run: env

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: "14.x"

    - name: Restore Cached Packages
      id: yarn-cache
      uses: actions/cache@v3
      with:
        path: |
          **/node_modules
          **/.eslintcache
          ${{ needs.install-dependencies.outputs.yarn-cache-dir }}
        key: ${{ runner.os }}-yarn-${{ needs.install-dependencies.outputs.yarn-version }}-${{ needs.install-dependencies.outputs.cache-hash }}

    - name: Run Lint Checks
      run: yarn lint
      working-directory: src

  unit-test-setup-job:
    name: Setup Unit Test Runner
    needs: install-dependencies
    runs-on: ubuntu-latest    
    outputs:
      test-chunks: ${{ steps.set-test-chunks.outputs.test-chunks }}
      test-chunk-ids: ${{ steps.set-test-chunk-ids.outputs.test-chunk-ids }}
    steps:
    - run: env

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: "14.x"

    - name: Restore Cached Packages
      id: yarn-cache
      uses: actions/cache@v3
      with:
        path: |
          **/node_modules
          **/.eslintcache
          ${{ needs.install-dependencies.outputs.yarn-cache-dir }}
        key: ${{ runner.os }}-yarn-${{ needs.install-dependencies.outputs.yarn-version }}-${{ needs.install-dependencies.outputs.cache-hash }}

    - id: set-test-chunks
      name: Set Chunks
      run: echo "test-chunks=$(npx jest --listTests --json | jq -cM '[_nwise(length / 10 | ceil)]')" >> $GITHUB_OUTPUT
      working-directory: src

    - id: set-test-chunk-ids
      name: Set Chunk IDs
      run: echo "test-chunk-ids=$(echo $CHUNKS | jq -cM 'to_entries | map(.key)')" >> $GITHUB_OUTPUT
      working-directory: src
      env:
        CHUNKS: ${{ steps.set-test-chunks.outputs.test-chunks }}

  unit-test-runner-job:
    name: Testing (chunk ${{ matrix.chunk }})
    needs: 
      - install-dependencies
      - unit-test-setup-job
    runs-on: ubuntu-latest

    strategy:
      matrix:
        chunk: ${{ fromJson(needs.unit-test-setup-job.outputs.test-chunk-ids) }}
      fail-fast: false

    steps:
      - run: env

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "14.x"

      - name: Restore Cached Packages
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            **/.eslintcache
            ${{ needs.install-dependencies.outputs.yarn-cache-dir }}
          key: ${{ runner.os }}-yarn-${{ needs.install-dependencies.outputs.yarn-version }}-${{ needs.install-dependencies.outputs.cache-hash }}
        
      - name: Run test suite
        run: echo $CHUNKS | jq '.[${{ matrix.chunk }}] | .[] | @text' | xargs yarn test:cov --coverageThreshold="{}"
        working-directory: src
        env:
          CHUNKS: ${{ needs.unit-test-setup-job.outputs.test-chunks }}

      - name: Rename coverage report results
        run: mv coverage/lcov.info coverage/lcov-chunk-${{ matrix.chunk }}.info
        working-directory: src

      - name: Archive coverage report results
        uses: actions/upload-artifact@v4.4.3
        with:
          name: coverage-report-chunk-${{ matrix.chunk }}
          path: src/coverage/lcov-chunk-${{ matrix.chunk }}.info

  static-analysis-job:
    name: Perform Static Analysis
    needs: 
      - unit-test-setup-job
      - unit-test-runner-job
    runs-on: ubuntu-latest
    steps:
      - run: env

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "14.x"

      - name: Download coverage report results
        uses: actions/download-artifact@v3
        with:
          path: src/coverage/

      - name: Merge coverage report results
        run: npx lcov-result-merger 'coverage/**/lcov-*.info' 'coverage/lcov.info'
        working-directory: src

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.0-beta.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./src/coverage/lcov.info
          flags: unit-tests
          fail_ci_if_error: true

      # - name: SonarCloud Scan
      #   uses: sonarsource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Cleanup
        uses: geekyeggo/delete-artifact@v2
        with:
          name: |
            coverage-report-chunk-*